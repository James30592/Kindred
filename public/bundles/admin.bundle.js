(()=>{"use strict";var t={733:(t,e,n)=>{n.d(e,{Yi:()=>i,_5:()=>c});var o=n(922);async function c(t){!function(t){t.classList.remove("fully-hidden"),setTimeout((()=>t.classList.remove("transparent")),10)}(t),await async function(t){await(0,o.hk)(t,"opacity")}(t)}async function i(t){!function(t){t.classList.add("transparent")}(t),await async function(t){await(0,o.hk)(t,"opacity"),t.classList.add("fully-hidden")}(t)}},300:(t,e,n)=>{var o=n(733);class c{#t;#e;constructor(t){this.#t=t.querySelector(".pop-btn"),this.#e=t.querySelector(".pop-btn-content")}init(){this.#n(this.#t,this.#e)}#n(t,e){t.addEventListener("click",(()=>{this.#o(t,e)}),{once:!0})}async#o(t,e){await(0,o._5)(e),window.addEventListener("click",(async()=>{await(0,o.Yi)(e),this.#n(t,e)}),{once:!0})}}document.querySelectorAll(".pop-btn-container").forEach((t=>{new c(t).init()}))},922:(t,e,n)=>{function o(t,e=null){return new Promise((n=>{t.addEventListener("transitionend",(async c=>{e?(c.propertyName===e||await o(t,e),n()):n()}),{once:!0})}))}n.d(e,{hk:()=>o})}},e={};function n(o){var c=e[o];if(void 0!==c)return c.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{n(300);const t=document.querySelector(".create-users"),e=document.querySelector("input[name='create-users-num']");t.addEventListener("click",(async function(){const t={numNewUsers:e.value},n=await fetch("/admin/createAutoUsers",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),o=await n.text(),c=document.querySelector(".admin-log");c.textContent="";const i=document.createElement("p"),a=document.createTextNode(o);i.appendChild(a),c.appendChild(i),setTimeout((function(){c.textContent=""}),5e3)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,